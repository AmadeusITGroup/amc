name: Ubuntu

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ci_test_gcc_release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++-5, g++-7, g++-9, g++-11]
    steps:
      - uses: actions/checkout@v2
      - name: Install compiler
        run: |
          echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main" | sudo tee -a /etc/apt/sources.list
          echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.compiler }}
      - name: cmake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Release
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cd build && ctest -j 2 --output-on-failure

  ci_test_gcc_debug:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++-6, g++-8, g++-10]
    steps:
      - uses: actions/checkout@v2
      - name: Install compiler
        run: |
          echo "deb http://dk.archive.ubuntu.com/ubuntu/ bionic main universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.compiler }}
      - name: cmake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Debug
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cd build && ctest -j 2 --output-on-failure

  ci_test_clang_release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: ["6.0", "8", "10", "12"]
    steps:
      - uses: actions/checkout@v2
      - name: Install compiler
        run: sudo apt-get install clang++-${{ matrix.compiler }}
        if: matrix.compiler == '6.0' || matrix.compiler == '8'
      - name: Install compiler
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ matrix.compiler }}
        if: matrix.compiler != '6.0' && matrix.compiler != '8'
      - name: cmake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=clang++-${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Release
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cd build && ctest -j 2 --output-on-failure

  ci_test_clang_debug:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: ["7", "9", "11", "13"]
    steps:
      - uses: actions/checkout@v2
      - name: Install compiler
        run: sudo apt-get install clang++-${{ matrix.compiler }}
        if: matrix.compiler == '7'
      - name: Install compiler
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ matrix.compiler }}
        if: matrix.compiler != '7'
      - name: cmake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=clang++-${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=Debug
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cd build && ctest -j 2 --output-on-failure

  ci_test_standards:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        standard: [11, 14, 17, 20]
        compiler: [g++, clang++]
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_CXX_STANDARD=${{ matrix.standard }} -DCMAKE_BUILD_TYPE=Debug
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cd build && ctest -j 2 --output-on-failure

  ci_nonstandard_features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cmake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=g++ -DAMC_PEDANTIC=ON -DCMAKE_BUILD_TYPE=Debug
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cd build && ctest -j 2 --output-on-failure
